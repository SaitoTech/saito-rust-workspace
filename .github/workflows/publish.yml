name: publish

on:
  push:
    branches: [ prod ]
#  pull_request:
#    branches: [ develop ]
#  workflow_run:
#    workflows: [ "Build Rust" ]
#    types: [ completed ]
#    branches: [ release/*** ]

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: saito-wasm/package-lock.json

      - name: get latest version
        run: |
          echo latest_npm_version=$(npm show saito-wasm version) >> $GITHUB_ENV
          echo current_npm_version=$(npm pkg get version) >> $GITHUB_ENV
          echo "current node package version : ${{ env.current_npm_version }}"
          echo "published node package version : ${{ env.latest_npm_version }}"
        working-directory: saito-wasm

      - name: version check
        if: ${{ env.latest_npm_version == env.current_npm_version }}
        run: |
          echo "same npm package version is already published"
          echo "current npm package version : ${{ env.current_npm_version }}"
          echo "published npm package version : ${{ env.latest_npm_version }}"

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: "wasm32-unknown-unknown"
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release

      - name: Bootstrapping
        run: bash ./scripts/bootstrap_for_ci.sh
        shell: bash

      - name: Install npm packages
        run: npm ci
        working-directory: saito-wasm

      - name: Wasm Build
        run: npm run build-prod
        working-directory: saito-wasm

      - name: Remove gitignore files
        if: ${{ env.latest_npm_version != env.current_npm_version }}
        run: rm -rf pkg/web/.gitignore pkg/node/.gitignore
        working-directory: saito-wasm

      - name: Publish package
        if: ${{ env.latest_npm_version != env.current_npm_version }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: saito-wasm

      - name: Upload Saito Rust Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "saito-rust"
          path: "target/release/saito-rust"

      - name: Build documentation
        run: cargo doc --no-deps

      - name: Upload Documentation Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "saito-docs"
          path: "target/doc"
