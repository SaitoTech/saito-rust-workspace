name: publish

on:
  push:
    branches: [ prod, master ]
#  pull_request:
#    branches: [ develop ]
#  workflow_run:
#    workflows: [ "Build Rust" ]
#    types: [ completed ]
#    branches: [ release/*** ]

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: saito-wasm/package-lock.json

      - name: get latest saito-wasm version
        run: |
          echo published_saito_wasm_version=$(npm show saito-wasm version) >> $GITHUB_ENV
          echo current_saito_wasm_version=$(npm pkg get version | tr -d '"') >> $GITHUB_ENV
          echo "current saito-wasm node package version : ${{ env.current_saito_wasm_version }}"
          echo "published saito-wasm node package version : ${{ env.published_saito_wasm_version }}"
        working-directory: saito-wasm

      - name: version check for saito-wasm
        if: ${{ env.published_saito_wasm_version == env.current_saito_wasm_version }}
        run: |
          echo "same saito-wasm npm package version is already published"
          echo "current npm package version : ${{ env.current_saito_wasm_version }}"
          echo "published npm package version : ${{ env.published_saito_wasm_version }}"

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: "wasm32-unknown-unknown"
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release

      - name: Bootstrapping
        run: bash ./scripts/bootstrap_for_ci.sh
        shell: bash

      - name: Install npm packages for saito-wasm
        run: npm install
        working-directory: saito-wasm

      - name: Wasm Build
        run: npm run build-prod
        working-directory: saito-wasm

      - name: Remove gitignore files in saito-wasm
        if: ${{ env.published_saito_wasm_version != env.current_saito_wasm_version }}
        run: rm -rf pkg/web/.gitignore pkg/node/.gitignore
        working-directory: saito-wasm

      - name: Publish saito-wasm package
        if: ${{ env.published_saito_wasm_version != env.current_saito_wasm_version }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: saito-wasm

      - name: Upload Saito Rust Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "saito-rust"
          path: "target/release/saito-rust"

      - name: Build documentation
        run: cargo doc --no-deps

      - name: Upload Documentation Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "saito-docs"
          path: "target/doc"

      - name: get latest saito-js version
        run: |
          echo published_saito_js_version=$(npm show saito-js version) >> $GITHUB_ENV
          echo current_saito_js_version=$(npm pkg get version | tr -d '"') >> $GITHUB_ENV
        working-directory: saito-js

      - name: version check saito-js
        if: ${{ env.published_saito_js_version == env.current_saito_js_version }}
        run: |
          echo "same saito-js version is already published"
          echo "current saito-js version : ${{ env.current_saito_js_version }}"
          echo "published saito-js version : ${{ env.published_saito_js_version }}"

      - name: Install npm packages for saito-js
        if: ${{ env.published_saito_js_version != env.current_saito_js_version }}
        run: npm ci
        working-directory: saito-js

      - name: Update saito-wasm package
        if: ${{ env.published_saito_js_version != env.current_saito_js_version }}
        run: npm update saito-wasm
        working-directory: saito-js

      - name: build saito-js
        if: ${{ env.published_saito_js_version != env.current_saito_js_version }}
        run: npm run build
        working-directory: saito-js

      - name: copying saito-js
        if: ${{ env.published_saito_js_version != env.current_saito_js_version }}
        run: |
          cp package.json dist
          cp package-lock.json dist
          cp tsconfig.json dist
          cp .npmignore dist
        working-directory: saito-js

      - name: Publish saito-js package
        if: ${{ env.published_saito_js_version != env.current_saito_js_version }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: saito-js/dist
