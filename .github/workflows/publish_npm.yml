name: publish

on:
  push:
    branches: [ prod, develop ] # remove develop after testing the script
  pull_request:
    branches: [ develop ]
#  workflow_run:
#    workflows: [ "Build Rust" ]
#    types: [ completed ]
#    branches: [ release/*** ]

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    #    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: saito-wasm/package-lock.json

      - name: Get latest published version
        run: |
          npm show saito-wasm version >> "$LATEST_SAITO_VERSION"
          npm pkg get version >> "$PACKAGE_SAITO_VERSION"
        working-directory: saito-wasm

      - name: Check versions
        if: $LATEST_SAITO_VERSION == $PACKAGE_SAITO_VERSION
        run: |
          echo "same version is already published"
          echo "current version : $PACKAGE_SAITO_VERSION"
          echo "published version : $LATEST_SAITO_VERSION"

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        if: $LATEST_SAITO_VERSION != $PACKAGE_SAITO_VERSION
        with:
          profile: minimal
          toolchain: stable
          target: "wasm32-unknown-unknown"
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        if: $LATEST_SAITO_VERSION != $PACKAGE_SAITO_VERSION
        with:
          command: build
          args: --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        if: $LATEST_SAITO_VERSION != $PACKAGE_SAITO_VERSION
        with:
          command: test
          args: --release

      - name: Bootstrapping
        if: $LATEST_SAITO_VERSION != $PACKAGE_SAITO_VERSION
        run: bash ./scripts/bootstrap_for_ci.sh
        shell: bash

      - name: Install npm packages
        if: $LATEST_SAITO_VERSION != $PACKAGE_SAITO_VERSION
        run: npm ci
        working-directory: saito-wasm

      - name: Wasm Build
        if: $LATEST_SAITO_VERSION != $PACKAGE_SAITO_VERSION
        run: npm run build
        working-directory: saito-wasm

      - name: Publish package
        if: $LATEST_SAITO_VERSION != $PACKAGE_SAITO_VERSION
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: saito-wasm
